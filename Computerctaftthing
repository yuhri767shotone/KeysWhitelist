-- Client Code

local requiredAccessLevel = 1  -- The minimum access level required
local serverId = 41  -- The ID of the server computer

-- Function to handle the server's authentication response
local function handleAuthenticationResponse(response)
    -- Check if the response is valid
    if not response then
        print("Unknown response from server.")
        return false  -- Return false to indicate failure
    end

    -- Match the response format "AUTH_SUCCESS:<level>"
    local status, level = response:match("AUTH_SUCCESS:(.-)$")

    if status == "AUTH_SUCCESS" then
        -- Check if the level is "inf" (owner access) or a numeric level
        if level == "inf" then
            print("Owner access granted. Exiting...")
            error()  -- Terminate the program for owner access
            return true
        end
        
        -- Convert level to a number (in case it's not "inf")
        level = tonumber(level)  

        -- Check if the level is a valid number
        if level then
            -- Check if the level is greater than or equal to the required access level
            if level >= requiredAccessLevel then
                print("Access granted with level " .. level)
                return true  -- Access granted
            else
                print("Access denied! Insufficient access level.")
                return false  -- Insufficient access level
            end
        else
            -- If level is invalid (not a number or "inf")
            print("Invalid access level received: " .. level)
            return false
        end
    elseif response == "AUTH_DENIED" then
        print("Authentication failed! Employee ID not found.")
        return false  -- Authentication failed
    else
        -- If the response doesn't match any known pattern
        print("Unknown response from server: " .. response)
        return false  -- Invalid response
    end
end

-- Main authentication loop
local function authenticate()
    while true do
        -- Request the employee ID from the user
        print("Enter your Employee ID:")
        local employeeID = read()

        -- Send the employee ID to the server
        rednet.send(serverId, employeeID)

        -- Wait for the server's response
        local id, response = rednet.receive()

        -- Handle the server's response
        if handleAuthenticationResponse(response) then
            break  -- If authentication is successful, exit the loop
        else
            -- If authentication failed, prompt again for Employee ID
            print("Please try again.")
        end
    end
end

-- Start the authentication process
authenticate()
