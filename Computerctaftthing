-- Client Authentication Script
local modemSide = "back"  -- The side where the modem is connected
local serverID = 41 -- The server ID you want to communicate with

-- The required access level (e.g., 1 or higher)
local requiredAccessLevel = 1

-- Open the modem for communication
if not peripheral.isPresent(modemSide) or peripheral.getType(modemSide) ~= "modem" then
    print("Error: Modem not found!")
    return
end
rednet.open(modemSide)

-- Function to send authentication request
local function authenticate(id)
    rednet.send(serverID, id)  -- Send employee ID to server for authentication
end

-- Function to handle the authentication result
local function handleAuthenticationResult(message)
    if message then
        if message:sub(1, 12) == "AUTH_SUCCESS:" then
            -- Parse the rank number from the message
            local rank = tonumber(message:sub(13))

            -- Check if the employee's rank meets the required access level
            if rank >= requiredAccessLevel then
                if rank == math.huge then
                    print("Owner access granted.")
                    -- Handle owner-specific behavior (e.g., give full access)
                else
                    print("Access granted. Rank level " .. rank)
                    -- Handle behavior for employees with sufficient rank
                end
            else
                print("Access denied. Rank " .. rank .. " is insufficient. Required level: " .. requiredAccessLevel)
            end
        elseif message == "AUTH_DENIED" then
            print("Authentication Denied. Employee ID not found.")
        else
            print("Unknown response.")
        end
    end
end

-- Ask for Employee ID
print("Enter Employee ID:")
local employeeID = read()

-- Authenticate employee
authenticate(employeeID)

-- Listen for the response from the server
local senderId, message = rednet.receive()

-- Handle the authentication result
handleAuthenticationResult(message)
